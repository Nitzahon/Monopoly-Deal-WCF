<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:ser="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:tns="http://schemas.datacontract.org/2004/07/MDWcfServiceLibrary" elementFormDefault="qualified" targetNamespace="http://schemas.datacontract.org/2004/07/MDWcfServiceLibrary" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://schemas.microsoft.com/2003/10/Serialization/" />
  <xs:import namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
  <xs:complexType name="GuidBox">
    <xs:sequence>
      <xs:element minOccurs="0" name="bool1" type="xs:boolean" />
      <xs:element minOccurs="0" name="guid" type="ser:guid" />
      <xs:element minOccurs="0" name="guid2" type="ser:guid" />
      <xs:element minOccurs="0" name="message" nillable="true" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="GuidBox" nillable="true" type="tns:GuidBox" />
  <xs:complexType name="BoolResponseBox">
    <xs:sequence>
      <xs:element minOccurs="0" name="message" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="success" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="BoolResponseBox" nillable="true" type="tns:BoolResponseBox" />
  <xs:simpleType name="GameLobbyStatus">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Empty" />
      <xs:enumeration value="Not_Enough_Players_To_Start" />
      <xs:enumeration value="Enough_Players_To_Start" />
      <xs:enumeration value="Full" />
      <xs:enumeration value="overFull" />
      <xs:enumeration value="Game_In_Progress" />
      <xs:enumeration value="Game_Ended" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="GameLobbyStatus" nillable="true" type="tns:GameLobbyStatus" />
  <xs:complexType name="ArrayOfGameLobby">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="GameLobby" nillable="true" type="tns:GameLobby" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfGameLobby" nillable="true" type="tns:ArrayOfGameLobby" />
  <xs:complexType name="GameLobby">
    <xs:sequence>
      <xs:element minOccurs="0" name="clientsConnectedToGame" nillable="true" type="tns:ArrayOfLobbyClient" />
      <xs:element minOccurs="0" name="description" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="gameLobbyName" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="guid" type="ser:guid" />
      <xs:element minOccurs="0" name="id" type="xs:int" />
      <xs:element minOccurs="0" name="status" type="tns:GameLobbyStatus" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="GameLobby" nillable="true" type="tns:GameLobby" />
  <xs:complexType name="ArrayOfLobbyClient">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="LobbyClient" nillable="true" type="tns:LobbyClient" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfLobbyClient" nillable="true" type="tns:ArrayOfLobbyClient" />
  <xs:complexType name="LobbyClient">
    <xs:sequence>
      <xs:element minOccurs="0" name="description" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="gameLobbyGuid" type="ser:guid" />
      <xs:element minOccurs="0" name="guid" type="ser:guid" />
      <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="readyToStart" type="xs:boolean" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="LobbyClient" nillable="true" type="tns:LobbyClient" />
  <xs:complexType name="PlayFieldModel">
    <xs:sequence>
      <xs:element minOccurs="0" name="actionCardEvent" nillable="true" type="tns:ActionCardEvent" />
      <xs:element minOccurs="0" name="currentPhase" type="tns:Statephase" />
      <xs:element minOccurs="0" name="currentTurnActionModel" nillable="true" type="tns:TurnActionModel" />
      <xs:element minOccurs="0" name="guidOfPlayerWhosTurnItIs" type="ser:guid" />
      <xs:element minOccurs="0" name="lastActionPlayed" nillable="true" type="tns:TurnActionModel" />
      <xs:element minOccurs="0" name="numberOfTurnsRemainingForPlayerWhosTurnItIs" type="xs:int" />
      <xs:element minOccurs="0" name="playerModels" nillable="true" type="tns:ArrayOfPlayerModel" />
      <xs:element xmlns:q1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="playersAffectedByActionCardGuids" nillable="true" type="q1:ArrayOfguid" />
      <xs:element minOccurs="0" name="playpile" nillable="true" type="tns:PlayPile" />
      <xs:element minOccurs="0" name="previousPlayFieldModelGuid" type="ser:guid" />
      <xs:element minOccurs="0" name="startOfATurn" type="xs:boolean" />
      <xs:element minOccurs="0" name="thisPlayFieldModelInstanceGuid" type="ser:guid" />
      <xs:element minOccurs="0" name="topCardsOnPlaypile" nillable="true" type="tns:ArrayOfCard" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PlayFieldModel" nillable="true" type="tns:PlayFieldModel" />
  <xs:complexType name="ActionCardEvent">
    <xs:sequence>
      <xs:element minOccurs="0" name="actionCardEventID" type="xs:int" />
      <xs:element minOccurs="0" name="actionCardTypeUsed" type="tns:ActionCardAction" />
      <xs:element minOccurs="0" name="actionJustSayNoUsedByAffectedPlayer" type="xs:boolean" />
      <xs:element minOccurs="0" name="actionJustSayNoUsedByOnTurnPlayer" type="xs:boolean" />
      <xs:element minOccurs="0" name="actionTypeTaken" type="tns:TurnActionTypes" />
      <xs:element xmlns:q2="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="bankedCardsTakenFromPlayer" nillable="true" type="q2:ArrayOfint" />
      <xs:element minOccurs="0" name="debtAmount" type="xs:int" />
      <xs:element minOccurs="0" name="doubleTheRentCardUsed" type="xs:boolean" />
      <xs:element minOccurs="0" name="originalActionCardId" type="xs:int" />
      <xs:element minOccurs="0" name="playerAffectedByAction" type="ser:guid" />
      <xs:element minOccurs="0" name="playerOnTurnPerformingAction" type="xs:boolean" />
      <xs:element minOccurs="0" name="playerWhoPerformedActionOffTurn" type="ser:guid" />
      <xs:element minOccurs="0" name="playerWhoPerformedActionOnTurn" type="ser:guid" />
      <xs:element minOccurs="0" name="propertyCardGivenUpInForcedDeal" nillable="true" type="tns:CardIDSetGuid" />
      <xs:element minOccurs="0" name="propertyCardsTakenFromPlayerAndSetTheCardWasIn" nillable="true" type="tns:ArrayOfCardIDSetGuid" />
      <xs:element minOccurs="0" name="propertySetTakenFromPlayer" type="xs:int" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ActionCardEvent" nillable="true" type="tns:ActionCardEvent" />
  <xs:simpleType name="ActionCardAction">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NotAnActionCard" />
      <xs:enumeration value="SlyDeal" />
      <xs:enumeration value="ForcedDeal" />
      <xs:enumeration value="DealBreaker" />
      <xs:enumeration value="JustSayNo" />
      <xs:enumeration value="DebtCollector" />
      <xs:enumeration value="ItsMyBirthday" />
      <xs:enumeration value="RentMultiColor" />
      <xs:enumeration value="RentStandard" />
      <xs:enumeration value="DoubleTheRent" />
      <xs:enumeration value="House" />
      <xs:enumeration value="Hotel" />
      <xs:enumeration value="PassGo" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="ActionCardAction" nillable="true" type="tns:ActionCardAction" />
  <xs:simpleType name="TurnActionTypes">
    <xs:restriction base="xs:string">
      <xs:enumeration value="gameStarted" />
      <xs:enumeration value="turnStarted" />
      <xs:enumeration value="drawTwoCardsAtStartOfTurn" />
      <xs:enumeration value="drawFiveCardsAtStartOfTurn" />
      <xs:enumeration value="EndTurn" />
      <xs:enumeration value="SwitchAroundPlayedProperties" />
      <xs:enumeration value="PlayCard" />
      <xs:enumeration value="PlayPropertyCard_New_Set" />
      <xs:enumeration value="PlayPropertyCardFromHand" />
      <xs:enumeration value="MovePropertyCard" />
      <xs:enumeration value="BankMoneyCard" />
      <xs:enumeration value="PlayActionCard" />
      <xs:enumeration value="BankActionCard" />
      <xs:enumeration value="PlayJustSayNo" />
      <xs:enumeration value="AdknowlegeRecievedCurrentState" />
      <xs:enumeration value="Discard_1_Card" />
      <xs:enumeration value="Discard_2_Cards" />
      <xs:enumeration value="Discard_3_Cards" />
      <xs:enumeration value="Discard_4_Cards" />
      <xs:enumeration value="Discard_5_Cards" />
      <xs:enumeration value="PayDebt" />
      <xs:enumeration value="Dont_Play_Just_Say_No" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="TurnActionTypes" nillable="true" type="tns:TurnActionTypes" />
  <xs:complexType name="CardIDSetGuid">
    <xs:sequence>
      <xs:element minOccurs="0" name="cardID" type="xs:int" />
      <xs:element minOccurs="0" name="setGuid" type="ser:guid" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="CardIDSetGuid" nillable="true" type="tns:CardIDSetGuid" />
  <xs:complexType name="ArrayOfCardIDSetGuid">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="CardIDSetGuid" nillable="true" type="tns:CardIDSetGuid" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfCardIDSetGuid" nillable="true" type="tns:ArrayOfCardIDSetGuid" />
  <xs:simpleType name="Statephase">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Game_Started" />
      <xs:enumeration value="Turn_Started_Draw_2_Cards" />
      <xs:enumeration value="Turn_Started_Draw_5_Cards" />
      <xs:enumeration value="Turn_Started_Cards_Drawn_0_Cards_Played" />
      <xs:enumeration value="Turn_Started_Cards_Drawn_0_Cards_Played_Ask_Just_Say_No" />
      <xs:enumeration value="Turn_Started_Cards_Drawn_0_Cards_Played_Just_Say_No_Used_By_Oppostion_Ask_Player_On_Turn_Just_Say_No" />
      <xs:enumeration value="Turn_Started_Cards_Drawn_1_Cards_Played" />
      <xs:enumeration value="Turn_Started_Cards_Drawn_1_Cards_Played_Ask_Just_Say_No" />
      <xs:enumeration value="Turn_Started_Cards_Drawn_1_Cards_Played_Just_Say_No_Used_By_Oppostion_Ask_Player_On_Turn_Just_Say_No" />
      <xs:enumeration value="Turn_Started_Cards_Drawn_2_Cards_Played" />
      <xs:enumeration value="Turn_Started_Cards_Drawn_2_Cards_Played_Ask_Just_Say_No" />
      <xs:enumeration value="Turn_Started_Cards_Drawn_2_Cards_Played_Just_Say_No_Used_By_Oppostion_Ask_Player_On_Turn_Just_Say_No" />
      <xs:enumeration value="Turn_Started_Cards_Drawn_3_Cards_Played_Swap_Properties_Or_End_Turn_Only" />
      <xs:enumeration value="Turn_Ended_7_Or_Less_Cards_In_Hand_Setup_NextPlayer" />
      <xs:enumeration value="Turn_Ended_8_Or_More_Cards_In_Hand_Discard_Cards" />
      <xs:enumeration value="Turn_Ended_8_Cards_In_Hand_Discard_1_Card" />
      <xs:enumeration value="Turn_Ended_9_Cards_In_Hand_Discard_2_Cards" />
      <xs:enumeration value="Turn_Ended_10_Cards_In_Hand_Discard_3_Cards" />
      <xs:enumeration value="Turn_Ended_11_Cards_In_Hand_Discard_4_Cards" />
      <xs:enumeration value="Turn_Ended_12_Cards_In_Hand_Discard_5_Cards" />
      <xs:enumeration value="Invalid_Action_For_Turn" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="Statephase" nillable="true" type="tns:Statephase" />
  <xs:complexType name="TurnActionModel">
    <xs:sequence>
      <xs:element minOccurs="0" name="actionTaken" type="xs:boolean" />
      <xs:element minOccurs="0" name="currentPlayFieldModelGuid" type="ser:guid" />
      <xs:element minOccurs="0" name="numberOfCardPlaysRemaining" type="xs:int" />
      <xs:element xmlns:q3="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="playerGuids" nillable="true" type="q3:ArrayOfguid" />
      <xs:element minOccurs="0" name="serverGuid" type="ser:guid" />
      <xs:element minOccurs="0" name="thisTurnactionGuid" type="ser:guid" />
      <xs:element minOccurs="0" name="turnActionType" type="tns:TurnActionTypes" />
      <xs:element minOccurs="0" name="typeOfActionToTake" type="tns:TurnActionTypes" />
      <xs:element minOccurs="0" name="typesOfActionListedPlayersCanTake" nillable="true" type="tns:ArrayOfTurnActionTypes" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="TurnActionModel" nillable="true" type="tns:TurnActionModel" />
  <xs:complexType name="ArrayOfTurnActionTypes">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="TurnActionTypes" type="tns:TurnActionTypes" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfTurnActionTypes" nillable="true" type="tns:ArrayOfTurnActionTypes" />
  <xs:complexType name="DrawOnTurnStart">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:TurnActionModel">
        <xs:sequence>
          <xs:element minOccurs="0" name="b" type="xs:boolean" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="DrawOnTurnStart" nillable="true" type="tns:DrawOnTurnStart" />
  <xs:complexType name="ArrayOfPlayerModel">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="PlayerModel" nillable="true" type="tns:PlayerModel" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfPlayerModel" nillable="true" type="tns:ArrayOfPlayerModel" />
  <xs:complexType name="PlayerModel">
    <xs:sequence>
      <xs:element minOccurs="0" name="actionsCurrentlyAllowed" nillable="true" type="tns:ArrayOfTurnActionTypes" />
      <xs:element minOccurs="0" name="amountOwedToAnotherPlayer" type="xs:int" />
      <xs:element minOccurs="0" name="bank" nillable="true" type="tns:PlayerBank" />
      <xs:element minOccurs="0" name="guid" type="ser:guid" />
      <xs:element minOccurs="0" name="hand" nillable="true" type="tns:PlayerHand" />
      <xs:element minOccurs="0" name="hasHadCardsTaken" type="xs:boolean" />
      <xs:element minOccurs="0" name="id" type="xs:int" />
      <xs:element minOccurs="0" name="isReadyToStartGame" type="xs:boolean" />
      <xs:element minOccurs="0" name="isThisPlayersTurn" type="xs:boolean" />
      <xs:element minOccurs="0" name="name" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="owesAnotherPlayer" type="xs:boolean" />
      <xs:element minOccurs="0" name="propertySets" nillable="true" type="tns:PlayerPropertySets" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PlayerModel" nillable="true" type="tns:PlayerModel" />
  <xs:complexType name="PlayerBank">
    <xs:sequence>
      <xs:element minOccurs="0" name="cardsInBank" nillable="true" type="tns:ArrayOfCard" />
      <xs:element minOccurs="0" name="playerGuid" type="ser:guid" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PlayerBank" nillable="true" type="tns:PlayerBank" />
  <xs:complexType name="ArrayOfCard">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="Card" nillable="true" type="tns:Card" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfCard" nillable="true" type="tns:ArrayOfCard" />
  <xs:complexType name="Card">
    <xs:sequence>
      <xs:element minOccurs="0" name="cardGuid" type="ser:guid" />
      <xs:element minOccurs="0" name="cardID" type="xs:int" />
      <xs:element minOccurs="0" name="cardName" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="cardText" nillable="true" type="xs:string" />
      <xs:element minOccurs="0" name="cardType" type="tns:CardType" />
      <xs:element minOccurs="0" name="cardValue" type="xs:int" />
      <xs:element minOccurs="0" name="description" nillable="true" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="Card" nillable="true" type="tns:Card" />
  <xs:simpleType name="CardType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Action" />
      <xs:enumeration value="Property" />
      <xs:enumeration value="WildProperty" />
      <xs:enumeration value="Money" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="CardType" nillable="true" type="tns:CardType" />
  <xs:complexType name="PropertyCard">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Card">
        <xs:sequence>
          <xs:element minOccurs="0" name="currentColorSetCompleteSize" type="xs:int" />
          <xs:element minOccurs="0" name="currentPropertyColor" type="tns:PropertyColor" />
          <xs:element minOccurs="0" name="downSetSize" type="xs:int" />
          <xs:element minOccurs="0" name="fiveCardInSetRentValue" type="xs:int" />
          <xs:element minOccurs="0" name="fiveCardInSetRentValueDown" type="xs:int" />
          <xs:element minOccurs="0" name="fiveCardInSetRentValueUp" type="xs:int" />
          <xs:element minOccurs="0" name="fourCardInSetRentValue" type="xs:int" />
          <xs:element minOccurs="0" name="fourCardInSetRentValueDown" type="xs:int" />
          <xs:element minOccurs="0" name="fourCardInSetRentValueUp" type="xs:int" />
          <xs:element minOccurs="0" name="isCardUp" type="xs:boolean" />
          <xs:element minOccurs="0" name="isMultiWild" type="xs:boolean" />
          <xs:element minOccurs="0" name="isWild" type="xs:boolean" />
          <xs:element minOccurs="0" name="oneCardInSetRentValue" type="xs:int" />
          <xs:element minOccurs="0" name="oneCardInSetRentValueDown" type="xs:int" />
          <xs:element minOccurs="0" name="oneCardInSetRentValueUp" type="xs:int" />
          <xs:element minOccurs="0" name="propertyColors" nillable="true" type="tns:ArrayOfPropertyColor" />
          <xs:element minOccurs="0" name="threeCardInSetRentValue" type="xs:int" />
          <xs:element minOccurs="0" name="threeCardInSetRentValueDown" type="xs:int" />
          <xs:element minOccurs="0" name="threeCardInSetRentValueUp" type="xs:int" />
          <xs:element minOccurs="0" name="twoCardInSetRentValue" type="xs:int" />
          <xs:element minOccurs="0" name="twoCardInSetRentValueDown" type="xs:int" />
          <xs:element minOccurs="0" name="twoCardInSetRentValueUp" type="xs:int" />
          <xs:element minOccurs="0" name="upSetSize" type="xs:int" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="PropertyCard" nillable="true" type="tns:PropertyCard" />
  <xs:simpleType name="PropertyColor">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Brown" />
      <xs:enumeration value="LightBlue" />
      <xs:enumeration value="Pink" />
      <xs:enumeration value="Orange" />
      <xs:enumeration value="Red" />
      <xs:enumeration value="Yellow" />
      <xs:enumeration value="Green" />
      <xs:enumeration value="Blue" />
      <xs:enumeration value="Station" />
      <xs:enumeration value="Utilities" />
      <xs:enumeration value="Wild_LightBlue_Brown" />
      <xs:enumeration value="Wild_LightBlue_Station" />
      <xs:enumeration value="Wild_Pink_Orange" />
      <xs:enumeration value="Wild_Red_Yellow" />
      <xs:enumeration value="Wild_Blue_Green" />
      <xs:enumeration value="Wild_Green_Station" />
      <xs:enumeration value="Wild_Station_Utility" />
      <xs:enumeration value="Wild_MultiColored" />
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="PropertyColor" nillable="true" type="tns:PropertyColor" />
  <xs:complexType name="ArrayOfPropertyColor">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="PropertyColor" type="tns:PropertyColor" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfPropertyColor" nillable="true" type="tns:ArrayOfPropertyColor" />
  <xs:complexType name="ActionCard">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Card">
        <xs:sequence>
          <xs:element minOccurs="0" name="MonetaryValueOnly" type="xs:boolean" />
          <xs:element minOccurs="0" name="actionType" type="tns:ActionCardAction" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="ActionCard" nillable="true" type="tns:ActionCard" />
  <xs:complexType name="RentStandard">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:ActionCard">
        <xs:sequence>
          <xs:element minOccurs="0" name="colorDown" type="tns:PropertyColor" />
          <xs:element minOccurs="0" name="colorUp" type="tns:PropertyColor" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="RentStandard" nillable="true" type="tns:RentStandard" />
  <xs:complexType name="MoneyCard">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:Card">
        <xs:sequence />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="MoneyCard" nillable="true" type="tns:MoneyCard" />
  <xs:complexType name="PlayerHand">
    <xs:sequence>
      <xs:element minOccurs="0" name="cardsInHand" nillable="true" type="tns:ArrayOfCard" />
      <xs:element minOccurs="0" name="playerGuid" type="ser:guid" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PlayerHand" nillable="true" type="tns:PlayerHand" />
  <xs:complexType name="PlayerPropertySets">
    <xs:sequence>
      <xs:element minOccurs="0" name="playerGuid" type="ser:guid" />
      <xs:element minOccurs="0" name="playersPropertySets" nillable="true" type="tns:ArrayOfPropertyCardSet" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PlayerPropertySets" nillable="true" type="tns:PlayerPropertySets" />
  <xs:complexType name="ArrayOfPropertyCardSet">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="PropertyCardSet" nillable="true" type="tns:PropertyCardSet" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfPropertyCardSet" nillable="true" type="tns:ArrayOfPropertyCardSet" />
  <xs:complexType name="PropertyCardSet">
    <xs:sequence>
      <xs:element minOccurs="0" name="guid" type="ser:guid" />
      <xs:element minOccurs="0" name="hasHotel" type="xs:boolean" />
      <xs:element minOccurs="0" name="hasHouse" type="xs:boolean" />
      <xs:element minOccurs="0" name="hotel" nillable="true" type="tns:Card" />
      <xs:element minOccurs="0" name="house" nillable="true" type="tns:Card" />
      <xs:element minOccurs="0" name="id" type="xs:int" />
      <xs:element minOccurs="0" name="properties" nillable="true" type="tns:ArrayOfPropertyCard" />
      <xs:element minOccurs="0" name="propertySetColor" type="tns:PropertyColor" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PropertyCardSet" nillable="true" type="tns:PropertyCardSet" />
  <xs:complexType name="ArrayOfPropertyCard">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="PropertyCard" nillable="true" type="tns:PropertyCard" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="ArrayOfPropertyCard" nillable="true" type="tns:ArrayOfPropertyCard" />
  <xs:complexType name="PlayPile">
    <xs:sequence>
      <xs:element minOccurs="0" name="playPile" nillable="true" type="tns:ArrayOfCard" />
    </xs:sequence>
  </xs:complexType>
  <xs:element name="PlayPile" nillable="true" type="tns:PlayPile" />
</xs:schema>